// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  COACH
  STUDENT
}

model User {
  id              Int        @id @default(autoincrement())
  role            Role
  name            String
  phone           String
  coachTimeSlot   TimeSlot[] @relation("coachTimeSlots")
  studentTimeSlot TimeSlot[] @relation("studentTimeSlots")
  createdAt       DateTime   @default(now()) @map("created_at")
  updatedAt       DateTime   @default(now()) @map("updated_at")
}

model TimeSlot {
  id         Int       @id @default(autoincrement())
  coach      User      @relation("coachTimeSlots", fields: [coachId], references: [id])
  coachId    Int       @map("coach_id")
  startTime  DateTime  @map("start_time")
  endTime    DateTime  @map("end_time")
  studentId  Int?      @map("user")
  student    User?     @relation("studentTimeSlots", fields: [studentId], references: [id])
  feedbackId Int?      @unique @map("feedback_id")
  feedback   Feedback? @relation(fields: [feedbackId], references: [id])
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @default(now()) @map("updated_at")
}

model Feedback {
  id       Int       @id @default(autoincrement())
  rating   Int
  note     String
  timeSlot TimeSlot?
}
